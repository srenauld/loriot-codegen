/*
 * Public NWK REST API
 *
 * Public LORIOT Network Server NWK REST API documentation
 *
 * The version of the OpenAPI document: 5.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct LoriotInlineObject8 {
    /// Device title, EUI by default
    #[serde(rename = "title")]
    pub title: String,
    /// Device description, empty by default
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Device LoRaWAN class type, 'A' by default.
    #[serde(rename = "devclass")]
    pub devclass: String,
    /// AES-128 application key specific for the end-device that is assigned by the application owner to the end-device and most likely derived from an application-specific root key exclusively known to and under the control of the application provider. 
    #[serde(rename = "appkey")]
    pub appkey: String,
    /// Required for OTAA register or to enroll new device. DevEUI is a global end-device ID in IEEE EUI64 address space that uniquely identifies the end-device. 
    #[serde(rename = "deveui")]
    pub deveui: String,
    /// AppEUI is a global application ID in IEEE EUI64 address space that uniquely identifies the application provider (i.e., owner) of the end-device. 
    #[serde(rename = "appeui")]
    pub appeui: String,
    /// NwkSKey is a network session key specific for the end-device. It is used by both the network server and the end-device to calculate and verify the MIC (message integrity code) of all 
    #[serde(rename = "nwkskey", skip_serializing_if = "Option::is_none")]
    pub nwkskey: Option<String>,
}

impl LoriotInlineObject8 {
    pub fn new(title: String, devclass: String, appkey: String, deveui: String, appeui: String) -> LoriotInlineObject8 {
        LoriotInlineObject8 {
            title,
            description: None,
            devclass,
            appkey,
            deveui,
            appeui,
            nwkskey: None,
        }
    }
}



/*
 * Public NWK REST API
 *
 * Public LORIOT Network Server NWK REST API documentation
 *
 * The version of the OpenAPI document: 5.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct LoriotInlineResponse20024 {
    /// root path of socket
    #[serde(rename = "socketLocation", skip_serializing_if = "Option::is_none")]
    pub socket_location: Option<String>,
    /// country of the server
    #[serde(rename = "serverCountry", skip_serializing_if = "Option::is_none")]
    pub server_country: Option<String>,
    /// city of the server
    #[serde(rename = "serverCity", skip_serializing_if = "Option::is_none")]
    pub server_city: Option<String>,
    /// flag that indicates the requirement of the gateway certificate in the server
    #[serde(rename = "gatewayCertificateRequired", skip_serializing_if = "Option::is_none")]
    pub gateway_certificate_required: Option<String>,
    /// sshtunnel is enabled
    #[serde(rename = "sshTunnelEnabled", skip_serializing_if = "Option::is_none")]
    pub ssh_tunnel_enabled: Option<bool>,
    /// server has internet access
    #[serde(rename = "internetAccess", skip_serializing_if = "Option::is_none")]
    pub internet_access: Option<bool>,
    /// multicast is enabled
    #[serde(rename = "multicastEnabled", skip_serializing_if = "Option::is_none")]
    pub multicast_enabled: Option<bool>,
    /// software version
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// server url
    #[serde(rename = "gatewayUrl", skip_serializing_if = "Option::is_none")]
    pub gateway_url: Option<String>,
    /// server authentication url
    #[serde(rename = "gatewayUrlAuth", skip_serializing_if = "Option::is_none")]
    pub gateway_url_auth: Option<String>,
    /// server type
    #[serde(rename = "serverType", skip_serializing_if = "Option::is_none")]
    pub server_type: Option<String>,
    /// google maps key
    #[serde(rename = "mapsKey", skip_serializing_if = "Option::is_none")]
    pub maps_key: Option<String>,
}

impl LoriotInlineResponse20024 {
    pub fn new() -> LoriotInlineResponse20024 {
        LoriotInlineResponse20024 {
            socket_location: None,
            server_country: None,
            server_city: None,
            gateway_certificate_required: None,
            ssh_tunnel_enabled: None,
            internet_access: None,
            multicast_enabled: None,
            version: None,
            gateway_url: None,
            gateway_url_auth: None,
            server_type: None,
            maps_key: None,
        }
    }
}



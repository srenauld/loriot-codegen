/*
 * Public NWK REST API
 *
 * Public LORIOT Network Server NWK REST API documentation
 *
 * The version of the OpenAPI document: 5.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct LoriotMcastdev {
    /// Multicast device EUI identifier (hexadecimal)
    #[serde(rename = "_id", skip_serializing_if = "Option::is_none")]
    pub _id: Option<String>,
    /// Multicast devaddr
    #[serde(rename = "devaddr", skip_serializing_if = "Option::is_none")]
    pub devaddr: Option<String>,
    /// Frequency to be used for downlink
    #[serde(rename = "freq", skip_serializing_if = "Option::is_none")]
    pub freq: Option<f32>,
    /// TODO
    #[serde(rename = "datr", skip_serializing_if = "Option::is_none")]
    pub datr: Option<String>,
    /// application session key
    #[serde(rename = "appskey", skip_serializing_if = "Option::is_none")]
    pub appskey: Option<String>,
    /// network server key
    #[serde(rename = "nwkskey", skip_serializing_if = "Option::is_none")]
    pub nwkskey: Option<String>,
    /// Time in advance to send multicast downlink to gateway (milliseconds).
    #[serde(rename = "preload", skip_serializing_if = "Option::is_none")]
    pub preload: Option<f32>,
    /// downlink sequence counter
    #[serde(rename = "seqdn", skip_serializing_if = "Option::is_none")]
    pub seqdn: Option<f32>,
}

impl LoriotMcastdev {
    pub fn new() -> LoriotMcastdev {
        LoriotMcastdev {
            _id: None,
            devaddr: None,
            freq: None,
            datr: None,
            appskey: None,
            nwkskey: None,
            preload: None,
            seqdn: None,
        }
    }
}



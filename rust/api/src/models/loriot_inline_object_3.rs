/*
 * Public NWK REST API
 *
 * Public LORIOT Network Server NWK REST API documentation
 *
 * The version of the OpenAPI document: 5.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct LoriotInlineObject3 {
    /// It requires tier 2
    #[serde(rename = "canotaa", skip_serializing_if = "Option::is_none")]
    pub canotaa: Option<bool>,
    /// It requires tier 2
    #[serde(rename = "ogwinfo", skip_serializing_if = "Option::is_none")]
    pub ogwinfo: Option<LoriotOgwinfo>,
    /// It requires tier 2
    #[serde(rename = "overbosity", skip_serializing_if = "Option::is_none")]
    pub overbosity: Option<LoriotOverbosity>,
    /// It requires tier 2
    #[serde(rename = "orx", skip_serializing_if = "Option::is_none")]
    pub orx: Option<bool>,
    /// It requires tier 2. Join Server ID to use. If not string, object with main properties. Going to change.
    #[serde(rename = "joinServerId", skip_serializing_if = "Option::is_none")]
    pub join_server_id: Option<String>,
    /// It requires tier 2
    #[serde(rename = "publishAppSKey", skip_serializing_if = "Option::is_none")]
    pub publish_app_s_key: Option<bool>,
    /// Join requests RX window
    #[serde(rename = "joinrxw", skip_serializing_if = "Option::is_none")]
    pub joinrxw: Option<LoriotJoinrxw>,
    /// Status flag to enable/disable sending custom properties to be published for each uplink data message 
    #[serde(rename = "customPropertiesUplinkDataMessage", skip_serializing_if = "Option::is_none")]
    pub custom_properties_uplink_data_message: Option<bool>,
    /// Resource visibility to other members of user's organization
    #[serde(rename = "visibility", skip_serializing_if = "Option::is_none")]
    pub visibility: Option<LoriotVisibility>,
}

impl LoriotInlineObject3 {
    pub fn new() -> LoriotInlineObject3 {
        LoriotInlineObject3 {
            canotaa: None,
            ogwinfo: None,
            overbosity: None,
            orx: None,
            join_server_id: None,
            publish_app_s_key: None,
            joinrxw: None,
            custom_properties_uplink_data_message: None,
            visibility: None,
        }
    }
}

/// It requires tier 2
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub enum LoriotOgwinfo {
    #[serde(rename = "none")]
    None,
    #[serde(rename = "rssi")]
    Rssi,
    #[serde(rename = "gwid")]
    Gwid,
    #[serde(rename = "full")]
    Full,
}
/// It requires tier 2
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub enum LoriotOverbosity {
    #[serde(rename = "min")]
    Min,
    #[serde(rename = "full")]
    Full,
}
/// Join requests RX window
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub enum LoriotJoinrxw {
    #[serde(rename = "1")]
    _1,
    #[serde(rename = "2")]
    _2,
}
/// Resource visibility to other members of user's organization
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub enum LoriotVisibility {
    #[serde(rename = "public")]
    Public,
    #[serde(rename = "private")]
    Private,
}

